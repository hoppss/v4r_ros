#! /usr/bin/env python
#Autogenerated V4L Dynamic Control

PACKAGE='v4r_artoolkitplus'
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

gen.add("show_camera_image", bool_t, 0, "Show camera image", True)
gen.add("skip_frames", int_t, 0, "Number of frames skiped between detections", 0, 0, 30)
gen.add("distorted_input", bool_t, 0, "the input image is distort", True)
gen.add("edge_threshold", int_t, 0, "edge threshold 0 -> Auto", 0, 0, 255)
gen.add("borderWidth", double_t, 0, "Pattern size", 0.125, 0, 1)
gen.add("patternWidth", double_t, 0, "Pattern size", 0.1, 0, 1)
gen.add("useBCH", bool_t, 0, "use BCH encoding", True)
enum_undist_mode = gen.enum([gen.const("NONE", int_t, 0, "non"),   
                             gen.const("STD", int_t, 1, "std"),   
                             gen.const("LUT", int_t, 2, "Lut")], 
                             "Edge detection strategy") 
gen.add("undist_mode", int_t, 0, "Undistortion Mode", 1, 0, 2, edit_method=enum_undist_mode)
enum_pose_estimation_mode = gen.enum([gen.const("ORIGINAL", int_t, 0, "orginal"),   
                             gen.const("ORIGINAL_CONT", int_t, 1, "cnt"),   
                             gen.const("ESTIMATOR_RPP", int_t, 2, "RPP")], 
                             "Edge detection strategy") 
gen.add("pose_estimation_mode", int_t, 0, "pose estimation Mode", 2, 0, 2, edit_method=enum_pose_estimation_mode)
gen.add("use_multi_marker_lite_detection", bool_t, 0, "Lite detection of maker (only for multi marker mode", True)
exit(gen.generate(PACKAGE, "v4r_artoolkitplus", "ARParam"))
